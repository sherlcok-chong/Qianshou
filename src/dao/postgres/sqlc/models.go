// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package db

import (
	"fmt"
)

type Relationtype string

const (
	RelationtypeLike    Relationtype = "like"
	RelationtypeMatched Relationtype = "matched"
	RelationtypeDislike Relationtype = "dislike"
)

func (e *Relationtype) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Relationtype(s)
	case string:
		*e = Relationtype(s)
	default:
		return fmt.Errorf("unsupported scan type for Relationtype: %T", src)
	}
	return nil
}

type Usertype string

const (
	UsertypeUser    Usertype = "user"
	UsertypeManager Usertype = "manager"
)

func (e *Usertype) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Usertype(s)
	case string:
		*e = Usertype(s)
	default:
		return fmt.Errorf("unsupported scan type for Usertype: %T", src)
	}
	return nil
}

type Relationship struct {
	Fid          int64        `json:"fid"`
	Tid          int64        `json:"tid"`
	RelationType Relationtype `json:"relation_type"`
}

type User struct {
	ID       int64    `json:"id"`
	Name     string   `json:"name"`
	UserType Usertype `json:"user_type"`
}
